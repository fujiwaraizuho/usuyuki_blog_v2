---
import '~/styles/blogContent.css';
import '~/styles/ghostKG.css';
import ArticleLayout from '~/layouts/extends/ArticleLayout.astro';
import { ghostClient } from '~/libs/ghostClient';
import { Markup } from "astro-remote";
import { components, sanitize } from "~/libs/componentsForAstroRemote";
import iso8601TimeToDate from '~/libs/iso8601TimeToDate';
const post = await ghostClient.posts
	.read({
		slug: Astro.params.slug,
		include: 'tags'
	})
	.catch((err: any) => {
		console.error(err);
	});

if (post === undefined) {
	return Astro.redirect('/404');
}
post.published_at = iso8601TimeToDate(post.published_at);

const headMeta = {
	title: post.title,
	slug: post.slug,
	// excerptの名に反して全部出てくるので、改行して150字で切る。
	description: post.excerpt.replace(/\r?\n/g, '').slice(0, 150),
	ogImage: post.feature_image
};
---

<ArticleLayout {...headMeta}>
	<h2 class="text-center mb-2 text-4xl">{post.title}</h2>
	<p class="text-center my-2 text-green">
		{post.published_at.year}年{post.published_at.month}月{post.published_at.day}日
	</p>
	{
		post.tags ? (
			<div class="flex justify-center flex-wrap">
				{post.tags.map((tag: any) =>
					tag.visibility === 'public' ? (
						<a href={`/tags/${tag.slug}`} class="text-center my-2 text-green mx-2">
							🏷{tag.name}
						</a>
					) : (
						''
					)
				)}
			</div>
		) : (
			''
		)
	}
	<p class="text-center mb-12">{post.reading_time} 分くらいで読めます！</p>
	{/* eslint-disable */}
	<!-- <div class="blog-content" set:html={post.html} /> -->
	<Markup content={post.html} {sanitize} {components} />
	{/* eslint-enable */}
</ArticleLayout>
